// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: file_disk.proto

package com.protobuf;

public final class FileDisk {
  private FileDisk() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DiskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Disk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string vendor = 1;</code>
     */
    boolean hasVendor();
    /**
     * <code>required string vendor = 1;</code>
     */
    java.lang.String getVendor();
    /**
     * <code>required string vendor = 1;</code>
     */
    com.google.protobuf.ByteString
        getVendorBytes();

    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    java.util.List<com.protobuf.FileDisk.DiskSpec> 
        getDiskSpecList();
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    com.protobuf.FileDisk.DiskSpec getDiskSpec(int index);
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    int getDiskSpecCount();
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    java.util.List<? extends com.protobuf.FileDisk.DiskSpecOrBuilder> 
        getDiskSpecOrBuilderList();
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    com.protobuf.FileDisk.DiskSpecOrBuilder getDiskSpecOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Disk}
   */
  public  static final class Disk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Disk)
      DiskOrBuilder {
    // Use Disk.newBuilder() to construct.
    private Disk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Disk() {
      vendor_ = "";
      diskSpec_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Disk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              vendor_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                diskSpec_ = new java.util.ArrayList<com.protobuf.FileDisk.DiskSpec>();
                mutable_bitField0_ |= 0x00000002;
              }
              diskSpec_.add(
                  input.readMessage(com.protobuf.FileDisk.DiskSpec.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          diskSpec_ = java.util.Collections.unmodifiableList(diskSpec_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protobuf.FileDisk.internal_static_Disk_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protobuf.FileDisk.internal_static_Disk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protobuf.FileDisk.Disk.class, com.protobuf.FileDisk.Disk.Builder.class);
    }

    private int bitField0_;
    public static final int VENDOR_FIELD_NUMBER = 1;
    private volatile java.lang.Object vendor_;
    /**
     * <code>required string vendor = 1;</code>
     */
    public boolean hasVendor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string vendor = 1;</code>
     */
    public java.lang.String getVendor() {
      java.lang.Object ref = vendor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vendor_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string vendor = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVendorBytes() {
      java.lang.Object ref = vendor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vendor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISKSPEC_FIELD_NUMBER = 2;
    private java.util.List<com.protobuf.FileDisk.DiskSpec> diskSpec_;
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    public java.util.List<com.protobuf.FileDisk.DiskSpec> getDiskSpecList() {
      return diskSpec_;
    }
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    public java.util.List<? extends com.protobuf.FileDisk.DiskSpecOrBuilder> 
        getDiskSpecOrBuilderList() {
      return diskSpec_;
    }
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    public int getDiskSpecCount() {
      return diskSpec_.size();
    }
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    public com.protobuf.FileDisk.DiskSpec getDiskSpec(int index) {
      return diskSpec_.get(index);
    }
    /**
     * <code>repeated .DiskSpec diskSpec = 2;</code>
     */
    public com.protobuf.FileDisk.DiskSpecOrBuilder getDiskSpecOrBuilder(
        int index) {
      return diskSpec_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVendor()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDiskSpecCount(); i++) {
        if (!getDiskSpec(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, vendor_);
      }
      for (int i = 0; i < diskSpec_.size(); i++) {
        output.writeMessage(2, diskSpec_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, vendor_);
      }
      for (int i = 0; i < diskSpec_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, diskSpec_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protobuf.FileDisk.Disk)) {
        return super.equals(obj);
      }
      com.protobuf.FileDisk.Disk other = (com.protobuf.FileDisk.Disk) obj;

      boolean result = true;
      result = result && (hasVendor() == other.hasVendor());
      if (hasVendor()) {
        result = result && getVendor()
            .equals(other.getVendor());
      }
      result = result && getDiskSpecList()
          .equals(other.getDiskSpecList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVendor()) {
        hash = (37 * hash) + VENDOR_FIELD_NUMBER;
        hash = (53 * hash) + getVendor().hashCode();
      }
      if (getDiskSpecCount() > 0) {
        hash = (37 * hash) + DISKSPEC_FIELD_NUMBER;
        hash = (53 * hash) + getDiskSpecList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protobuf.FileDisk.Disk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protobuf.FileDisk.Disk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protobuf.FileDisk.Disk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protobuf.FileDisk.Disk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protobuf.FileDisk.Disk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protobuf.FileDisk.Disk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protobuf.FileDisk.Disk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protobuf.FileDisk.Disk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protobuf.FileDisk.Disk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protobuf.FileDisk.Disk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protobuf.FileDisk.Disk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Disk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Disk)
        com.protobuf.FileDisk.DiskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protobuf.FileDisk.internal_static_Disk_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protobuf.FileDisk.internal_static_Disk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protobuf.FileDisk.Disk.class, com.protobuf.FileDisk.Disk.Builder.class);
      }

      // Construct using com.protobuf.FileDisk.Disk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDiskSpecFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        vendor_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (diskSpecBuilder_ == null) {
          diskSpec_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          diskSpecBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protobuf.FileDisk.internal_static_Disk_descriptor;
      }

      public com.protobuf.FileDisk.Disk getDefaultInstanceForType() {
        return com.protobuf.FileDisk.Disk.getDefaultInstance();
      }

      public com.protobuf.FileDisk.Disk build() {
        com.protobuf.FileDisk.Disk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protobuf.FileDisk.Disk buildPartial() {
        com.protobuf.FileDisk.Disk result = new com.protobuf.FileDisk.Disk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.vendor_ = vendor_;
        if (diskSpecBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            diskSpec_ = java.util.Collections.unmodifiableList(diskSpec_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.diskSpec_ = diskSpec_;
        } else {
          result.diskSpec_ = diskSpecBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protobuf.FileDisk.Disk) {
          return mergeFrom((com.protobuf.FileDisk.Disk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protobuf.FileDisk.Disk other) {
        if (other == com.protobuf.FileDisk.Disk.getDefaultInstance()) return this;
        if (other.hasVendor()) {
          bitField0_ |= 0x00000001;
          vendor_ = other.vendor_;
          onChanged();
        }
        if (diskSpecBuilder_ == null) {
          if (!other.diskSpec_.isEmpty()) {
            if (diskSpec_.isEmpty()) {
              diskSpec_ = other.diskSpec_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDiskSpecIsMutable();
              diskSpec_.addAll(other.diskSpec_);
            }
            onChanged();
          }
        } else {
          if (!other.diskSpec_.isEmpty()) {
            if (diskSpecBuilder_.isEmpty()) {
              diskSpecBuilder_.dispose();
              diskSpecBuilder_ = null;
              diskSpec_ = other.diskSpec_;
              bitField0_ = (bitField0_ & ~0x00000002);
              diskSpecBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDiskSpecFieldBuilder() : null;
            } else {
              diskSpecBuilder_.addAllMessages(other.diskSpec_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVendor()) {
          return false;
        }
        for (int i = 0; i < getDiskSpecCount(); i++) {
          if (!getDiskSpec(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protobuf.FileDisk.Disk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protobuf.FileDisk.Disk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object vendor_ = "";
      /**
       * <code>required string vendor = 1;</code>
       */
      public boolean hasVendor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string vendor = 1;</code>
       */
      public java.lang.String getVendor() {
        java.lang.Object ref = vendor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vendor_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string vendor = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVendorBytes() {
        java.lang.Object ref = vendor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vendor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string vendor = 1;</code>
       */
      public Builder setVendor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        vendor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string vendor = 1;</code>
       */
      public Builder clearVendor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        vendor_ = getDefaultInstance().getVendor();
        onChanged();
        return this;
      }
      /**
       * <code>required string vendor = 1;</code>
       */
      public Builder setVendorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        vendor_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.protobuf.FileDisk.DiskSpec> diskSpec_ =
        java.util.Collections.emptyList();
      private void ensureDiskSpecIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          diskSpec_ = new java.util.ArrayList<com.protobuf.FileDisk.DiskSpec>(diskSpec_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protobuf.FileDisk.DiskSpec, com.protobuf.FileDisk.DiskSpec.Builder, com.protobuf.FileDisk.DiskSpecOrBuilder> diskSpecBuilder_;

      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public java.util.List<com.protobuf.FileDisk.DiskSpec> getDiskSpecList() {
        if (diskSpecBuilder_ == null) {
          return java.util.Collections.unmodifiableList(diskSpec_);
        } else {
          return diskSpecBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public int getDiskSpecCount() {
        if (diskSpecBuilder_ == null) {
          return diskSpec_.size();
        } else {
          return diskSpecBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public com.protobuf.FileDisk.DiskSpec getDiskSpec(int index) {
        if (diskSpecBuilder_ == null) {
          return diskSpec_.get(index);
        } else {
          return diskSpecBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder setDiskSpec(
          int index, com.protobuf.FileDisk.DiskSpec value) {
        if (diskSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiskSpecIsMutable();
          diskSpec_.set(index, value);
          onChanged();
        } else {
          diskSpecBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder setDiskSpec(
          int index, com.protobuf.FileDisk.DiskSpec.Builder builderForValue) {
        if (diskSpecBuilder_ == null) {
          ensureDiskSpecIsMutable();
          diskSpec_.set(index, builderForValue.build());
          onChanged();
        } else {
          diskSpecBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder addDiskSpec(com.protobuf.FileDisk.DiskSpec value) {
        if (diskSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiskSpecIsMutable();
          diskSpec_.add(value);
          onChanged();
        } else {
          diskSpecBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder addDiskSpec(
          int index, com.protobuf.FileDisk.DiskSpec value) {
        if (diskSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDiskSpecIsMutable();
          diskSpec_.add(index, value);
          onChanged();
        } else {
          diskSpecBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder addDiskSpec(
          com.protobuf.FileDisk.DiskSpec.Builder builderForValue) {
        if (diskSpecBuilder_ == null) {
          ensureDiskSpecIsMutable();
          diskSpec_.add(builderForValue.build());
          onChanged();
        } else {
          diskSpecBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder addDiskSpec(
          int index, com.protobuf.FileDisk.DiskSpec.Builder builderForValue) {
        if (diskSpecBuilder_ == null) {
          ensureDiskSpecIsMutable();
          diskSpec_.add(index, builderForValue.build());
          onChanged();
        } else {
          diskSpecBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder addAllDiskSpec(
          java.lang.Iterable<? extends com.protobuf.FileDisk.DiskSpec> values) {
        if (diskSpecBuilder_ == null) {
          ensureDiskSpecIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, diskSpec_);
          onChanged();
        } else {
          diskSpecBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder clearDiskSpec() {
        if (diskSpecBuilder_ == null) {
          diskSpec_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          diskSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public Builder removeDiskSpec(int index) {
        if (diskSpecBuilder_ == null) {
          ensureDiskSpecIsMutable();
          diskSpec_.remove(index);
          onChanged();
        } else {
          diskSpecBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public com.protobuf.FileDisk.DiskSpec.Builder getDiskSpecBuilder(
          int index) {
        return getDiskSpecFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public com.protobuf.FileDisk.DiskSpecOrBuilder getDiskSpecOrBuilder(
          int index) {
        if (diskSpecBuilder_ == null) {
          return diskSpec_.get(index);  } else {
          return diskSpecBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public java.util.List<? extends com.protobuf.FileDisk.DiskSpecOrBuilder> 
           getDiskSpecOrBuilderList() {
        if (diskSpecBuilder_ != null) {
          return diskSpecBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(diskSpec_);
        }
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public com.protobuf.FileDisk.DiskSpec.Builder addDiskSpecBuilder() {
        return getDiskSpecFieldBuilder().addBuilder(
            com.protobuf.FileDisk.DiskSpec.getDefaultInstance());
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public com.protobuf.FileDisk.DiskSpec.Builder addDiskSpecBuilder(
          int index) {
        return getDiskSpecFieldBuilder().addBuilder(
            index, com.protobuf.FileDisk.DiskSpec.getDefaultInstance());
      }
      /**
       * <code>repeated .DiskSpec diskSpec = 2;</code>
       */
      public java.util.List<com.protobuf.FileDisk.DiskSpec.Builder> 
           getDiskSpecBuilderList() {
        return getDiskSpecFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.protobuf.FileDisk.DiskSpec, com.protobuf.FileDisk.DiskSpec.Builder, com.protobuf.FileDisk.DiskSpecOrBuilder> 
          getDiskSpecFieldBuilder() {
        if (diskSpecBuilder_ == null) {
          diskSpecBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.protobuf.FileDisk.DiskSpec, com.protobuf.FileDisk.DiskSpec.Builder, com.protobuf.FileDisk.DiskSpecOrBuilder>(
                  diskSpec_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          diskSpec_ = null;
        }
        return diskSpecBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Disk)
    }

    // @@protoc_insertion_point(class_scope:Disk)
    private static final com.protobuf.FileDisk.Disk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protobuf.FileDisk.Disk();
    }

    public static com.protobuf.FileDisk.Disk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Disk>
        PARSER = new com.google.protobuf.AbstractParser<Disk>() {
      public Disk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Disk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Disk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Disk> getParserForType() {
      return PARSER;
    }

    public com.protobuf.FileDisk.Disk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DiskSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DiskSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 volume = 1;</code>
     */
    boolean hasVolume();
    /**
     * <code>required int32 volume = 1;</code>
     */
    int getVolume();

    /**
     * <code>required int32 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 2;</code>
     */
    int getId();

    /**
     * <code>optional int32 WSpeed = 3;</code>
     */
    boolean hasWSpeed();
    /**
     * <code>optional int32 WSpeed = 3;</code>
     */
    int getWSpeed();

    /**
     * <code>optional int32 RSpeed = 4;</code>
     */
    boolean hasRSpeed();
    /**
     * <code>optional int32 RSpeed = 4;</code>
     */
    int getRSpeed();

    /**
     * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
     */
    boolean hasType();
    /**
     * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
     */
    com.protobuf.FileDisk.DiskSpec.Type getType();
  }
  /**
   * Protobuf type {@code DiskSpec}
   */
  public  static final class DiskSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DiskSpec)
      DiskSpecOrBuilder {
    // Use DiskSpec.newBuilder() to construct.
    private DiskSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DiskSpec() {
      volume_ = 0;
      id_ = 0;
      wSpeed_ = 0;
      rSpeed_ = 0;
      type_ = 1;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DiskSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              volume_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              wSpeed_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              rSpeed_ = input.readInt32();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.protobuf.FileDisk.DiskSpec.Type value = com.protobuf.FileDisk.DiskSpec.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                type_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.protobuf.FileDisk.internal_static_DiskSpec_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.protobuf.FileDisk.internal_static_DiskSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.protobuf.FileDisk.DiskSpec.class, com.protobuf.FileDisk.DiskSpec.Builder.class);
    }

    /**
     * Protobuf enum {@code DiskSpec.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SSD = 0;</code>
       */
      SSD(0),
      /**
       * <code>HDD = 1;</code>
       */
      HDD(1),
      /**
       * <code>SAS = 2;</code>
       */
      SAS(2),
      ;

      /**
       * <code>SSD = 0;</code>
       */
      public static final int SSD_VALUE = 0;
      /**
       * <code>HDD = 1;</code>
       */
      public static final int HDD_VALUE = 1;
      /**
       * <code>SAS = 2;</code>
       */
      public static final int SAS_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return SSD;
          case 1: return HDD;
          case 2: return SAS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.protobuf.FileDisk.DiskSpec.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:DiskSpec.Type)
    }

    private int bitField0_;
    public static final int VOLUME_FIELD_NUMBER = 1;
    private int volume_;
    /**
     * <code>required int32 volume = 1;</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 volume = 1;</code>
     */
    public int getVolume() {
      return volume_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>required int32 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int WSPEED_FIELD_NUMBER = 3;
    private int wSpeed_;
    /**
     * <code>optional int32 WSpeed = 3;</code>
     */
    public boolean hasWSpeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 WSpeed = 3;</code>
     */
    public int getWSpeed() {
      return wSpeed_;
    }

    public static final int RSPEED_FIELD_NUMBER = 4;
    private int rSpeed_;
    /**
     * <code>optional int32 RSpeed = 4;</code>
     */
    public boolean hasRSpeed() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 RSpeed = 4;</code>
     */
    public int getRSpeed() {
      return rSpeed_;
    }

    public static final int TYPE_FIELD_NUMBER = 5;
    private int type_;
    /**
     * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
     */
    public com.protobuf.FileDisk.DiskSpec.Type getType() {
      com.protobuf.FileDisk.DiskSpec.Type result = com.protobuf.FileDisk.DiskSpec.Type.valueOf(type_);
      return result == null ? com.protobuf.FileDisk.DiskSpec.Type.HDD : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVolume()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, volume_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, wSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, rSpeed_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, volume_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, wSpeed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rSpeed_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.protobuf.FileDisk.DiskSpec)) {
        return super.equals(obj);
      }
      com.protobuf.FileDisk.DiskSpec other = (com.protobuf.FileDisk.DiskSpec) obj;

      boolean result = true;
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (getVolume()
            == other.getVolume());
      }
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasWSpeed() == other.hasWSpeed());
      if (hasWSpeed()) {
        result = result && (getWSpeed()
            == other.getWSpeed());
      }
      result = result && (hasRSpeed() == other.hasRSpeed());
      if (hasRSpeed()) {
        result = result && (getRSpeed()
            == other.getRSpeed());
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + getVolume();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasWSpeed()) {
        hash = (37 * hash) + WSPEED_FIELD_NUMBER;
        hash = (53 * hash) + getWSpeed();
      }
      if (hasRSpeed()) {
        hash = (37 * hash) + RSPEED_FIELD_NUMBER;
        hash = (53 * hash) + getRSpeed();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.protobuf.FileDisk.DiskSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protobuf.FileDisk.DiskSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protobuf.FileDisk.DiskSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.protobuf.FileDisk.DiskSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.protobuf.FileDisk.DiskSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protobuf.FileDisk.DiskSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protobuf.FileDisk.DiskSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.protobuf.FileDisk.DiskSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.protobuf.FileDisk.DiskSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.protobuf.FileDisk.DiskSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.protobuf.FileDisk.DiskSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DiskSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DiskSpec)
        com.protobuf.FileDisk.DiskSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.protobuf.FileDisk.internal_static_DiskSpec_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.protobuf.FileDisk.internal_static_DiskSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.protobuf.FileDisk.DiskSpec.class, com.protobuf.FileDisk.DiskSpec.Builder.class);
      }

      // Construct using com.protobuf.FileDisk.DiskSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        volume_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rSpeed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 1;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.protobuf.FileDisk.internal_static_DiskSpec_descriptor;
      }

      public com.protobuf.FileDisk.DiskSpec getDefaultInstanceForType() {
        return com.protobuf.FileDisk.DiskSpec.getDefaultInstance();
      }

      public com.protobuf.FileDisk.DiskSpec build() {
        com.protobuf.FileDisk.DiskSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.protobuf.FileDisk.DiskSpec buildPartial() {
        com.protobuf.FileDisk.DiskSpec result = new com.protobuf.FileDisk.DiskSpec(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wSpeed_ = wSpeed_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rSpeed_ = rSpeed_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.protobuf.FileDisk.DiskSpec) {
          return mergeFrom((com.protobuf.FileDisk.DiskSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.protobuf.FileDisk.DiskSpec other) {
        if (other == com.protobuf.FileDisk.DiskSpec.getDefaultInstance()) return this;
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasWSpeed()) {
          setWSpeed(other.getWSpeed());
        }
        if (other.hasRSpeed()) {
          setRSpeed(other.getRSpeed());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVolume()) {
          return false;
        }
        if (!hasId()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.protobuf.FileDisk.DiskSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.protobuf.FileDisk.DiskSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int volume_ ;
      /**
       * <code>required int32 volume = 1;</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 volume = 1;</code>
       */
      public int getVolume() {
        return volume_;
      }
      /**
       * <code>required int32 volume = 1;</code>
       */
      public Builder setVolume(int value) {
        bitField0_ |= 0x00000001;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 volume = 1;</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000001);
        volume_ = 0;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>required int32 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private int wSpeed_ ;
      /**
       * <code>optional int32 WSpeed = 3;</code>
       */
      public boolean hasWSpeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 WSpeed = 3;</code>
       */
      public int getWSpeed() {
        return wSpeed_;
      }
      /**
       * <code>optional int32 WSpeed = 3;</code>
       */
      public Builder setWSpeed(int value) {
        bitField0_ |= 0x00000004;
        wSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 WSpeed = 3;</code>
       */
      public Builder clearWSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wSpeed_ = 0;
        onChanged();
        return this;
      }

      private int rSpeed_ ;
      /**
       * <code>optional int32 RSpeed = 4;</code>
       */
      public boolean hasRSpeed() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 RSpeed = 4;</code>
       */
      public int getRSpeed() {
        return rSpeed_;
      }
      /**
       * <code>optional int32 RSpeed = 4;</code>
       */
      public Builder setRSpeed(int value) {
        bitField0_ |= 0x00000008;
        rSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 RSpeed = 4;</code>
       */
      public Builder clearRSpeed() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rSpeed_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 1;
      /**
       * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
       */
      public com.protobuf.FileDisk.DiskSpec.Type getType() {
        com.protobuf.FileDisk.DiskSpec.Type result = com.protobuf.FileDisk.DiskSpec.Type.valueOf(type_);
        return result == null ? com.protobuf.FileDisk.DiskSpec.Type.HDD : result;
      }
      /**
       * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
       */
      public Builder setType(com.protobuf.FileDisk.DiskSpec.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .DiskSpec.Type type = 5 [default = HDD];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = 1;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DiskSpec)
    }

    // @@protoc_insertion_point(class_scope:DiskSpec)
    private static final com.protobuf.FileDisk.DiskSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.protobuf.FileDisk.DiskSpec();
    }

    public static com.protobuf.FileDisk.DiskSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DiskSpec>
        PARSER = new com.google.protobuf.AbstractParser<DiskSpec>() {
      public DiskSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DiskSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DiskSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DiskSpec> getParserForType() {
      return PARSER;
    }

    public com.protobuf.FileDisk.DiskSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Disk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Disk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DiskSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DiskSpec_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017file_disk.proto\"3\n\004Disk\022\016\n\006vendor\030\001 \002(" +
      "\t\022\033\n\010diskSpec\030\002 \003(\0132\t.DiskSpec\"\214\001\n\010DiskS" +
      "pec\022\016\n\006volume\030\001 \002(\005\022\n\n\002id\030\002 \002(\005\022\016\n\006WSpee" +
      "d\030\003 \001(\005\022\016\n\006RSpeed\030\004 \001(\005\022!\n\004type\030\005 \001(\0162\016." +
      "DiskSpec.Type:\003HDD\"!\n\004Type\022\007\n\003SSD\020\000\022\007\n\003H" +
      "DD\020\001\022\007\n\003SAS\020\002B\030\n\014com.protobufB\010FileDisk"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Disk_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Disk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Disk_descriptor,
        new java.lang.String[] { "Vendor", "DiskSpec", });
    internal_static_DiskSpec_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_DiskSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DiskSpec_descriptor,
        new java.lang.String[] { "Volume", "Id", "WSpeed", "RSpeed", "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
